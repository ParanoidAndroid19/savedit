{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEmptyRepliesListing = getEmptyRepliesListing;\nexports.addEmptyRepliesListing = addEmptyRepliesListing;\nexports.handleJsonErrors = handleJsonErrors;\nexports.findMessageInTree = findMessageInTree;\nexports.formatPermissions = formatPermissions;\nexports.renameKey = renameKey;\nexports.buildRepliesTree = buildRepliesTree;\nexports.addFullnamePrefix = addFullnamePrefix;\nexports.hasFullnamePrefix = hasFullnamePrefix;\nexports.addSnakeCaseShadowProps = addSnakeCaseShadowProps;\nexports.defineInspectFunc = defineInspectFunc;\nexports.requiredArg = requiredArg;\nexports.isBrowser = exports.formatLivethreadPermissions = exports.formatModPermissions = void 0;\n\nvar _util = _interopRequireDefault(require(\"util\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"./constants.js\");\n\nvar _More = require(\"./objects/More.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n* @summary Returns an unfetched empty replies Listing for an item.\n* @param {Comment|Submission|PrivateMessage} item An item without a replies Listing\n* @returns {Listing} The empty replies Listing\n* @api private\n*/\n\n\nfunction getEmptyRepliesListing(item) {\n  if (item.constructor._name === 'Comment') {\n    return item._r._newObject('Listing', {\n      _uri: \"comments/\".concat((item.link_id || item.parent_id).slice(3)),\n      _query: {\n        comment: item.name.slice(3)\n      },\n      _transform: (0, _lodash.property)('comments[0].replies'),\n      _link_id: item.link_id,\n      _isCommentList: true\n    });\n  }\n\n  if (item.constructor._name === 'Submission') {\n    return item._r._newObject('Listing', {\n      _uri: \"comments/\".concat(item.id),\n      _transform: (0, _lodash.property)('comments'),\n      _isCommentList: true\n    });\n  }\n\n  return item._r._newObject('Listing');\n}\n/**\n* @summary Adds an empty replies Listing to an item.\n* @param {Comment|PrivateMessage} item\n* @returns {Comment|PrivateMessage} The item with the new replies Listing\n* @api private\n*/\n\n\nfunction addEmptyRepliesListing(item) {\n  item.replies = getEmptyRepliesListing(item);\n  return item;\n}\n\nfunction handleJsonErrors(returnValue) {\n  return function (response) {\n    if ((0, _lodash.isEmpty)(response) || (0, _lodash.isEmpty)(response.json.errors)) {\n      return returnValue;\n    }\n\n    throw new Error(response.json.errors[0]);\n  };\n}\n/**\n* @summary Performs a depth-first search of a tree of private messages, in order to find a message with a given name.\n* @param {String} desiredName The fullname of the desired message\n* @param {PrivateMessage} rootNode The root message of the tree\n* @returns {PrivateMessage} The PrivateMessage with the given fullname, or undefined if it was not found in the tree.\n* @api private\n*/\n\n\nfunction findMessageInTree(desiredName, rootNode) {\n  return rootNode.name === desiredName ? rootNode : (0, _lodash.find)(rootNode.replies.map((0, _lodash.partial)(findMessageInTree, desiredName)));\n}\n/**\n* @summary Formats permissions into a '+'/'-' string\n* @param {String[]} allPermissionNames All possible permissions in this category\n* @param {String[]} permsArray The permissions that should be enabled\n* @returns {String} The permissions formatted into a '+'/'-' string\n* @api private\n*/\n\n\nfunction formatPermissions(allPermissionNames, permsArray) {\n  return permsArray ? allPermissionNames.map(function (type) {\n    return ((0, _lodash.includes)(permsArray, type) ? '+' : '-') + type;\n  }).join(',') : '+all';\n}\n\nvar formatModPermissions = (0, _lodash.partial)(formatPermissions, _constants.MODERATOR_PERMISSIONS);\nexports.formatModPermissions = formatModPermissions;\nvar formatLivethreadPermissions = (0, _lodash.partial)(formatPermissions, _constants.LIVETHREAD_PERMISSIONS);\n/**\n* @summary Renames a key on an object, omitting the old key\n* @param {Object} obj\n* @param oldKey {String}\n* @param newKey {String}\n* @returns {Object} A version of the object with the key renamed\n* @api private\n*/\n\nexports.formatLivethreadPermissions = formatLivethreadPermissions;\n\nfunction renameKey(obj, oldKey, newKey) {\n  return obj && (0, _lodash.omit)(_objectSpread({}, obj, {\n    [newKey]: obj[oldKey]\n  }), oldKey);\n}\n/**\n* @summary Builds a replies tree from a list of child comments or messages\n* @desc When reddit returns private messages (or comments from the /api/morechildren endpoint), it arranges their in a very\nnonintuitive way (see https://github.com/not-an-aardvark/snoowrap/issues/15 for details). This function rearranges the message\ntree so that replies are threaded properly.\n* @param {Array} childList The list of child comments\n* @returns {Array} The resulting list of child comments, arranged into a tree.\n* @api private\n*/\n\n\nfunction buildRepliesTree(childList) {\n  var childMap = (0, _lodash.keyBy)(childList, 'name');\n  childList.forEach(addEmptyRepliesListing);\n  childList.filter(function (child) {\n    return child.constructor._name === 'Comment';\n  }).forEach(function (child) {\n    return child.replies._more = _More.emptyChildren;\n  });\n  (0, _lodash.remove)(childList, function (child) {\n    return childMap[child.parent_id];\n  }).forEach(function (child) {\n    if (child.constructor._name === 'More') {\n      childMap[child.parent_id].replies._setMore(child);\n\n      child.link_id = childMap[child.parent_id].link_id;\n    } else {\n      childMap[child.parent_id].replies.push(child);\n    }\n  });\n  return childList;\n}\n/**\n* @summary Adds a fullname prefix to an item, if it doesn't have a prefix already. If the item is a RedditContent object, gets\nthe item's fullname.\n* @param {String|RedditContent} item\n* @returns {String}\n* @api private\n*/\n\n\nfunction addFullnamePrefix(item, prefix) {\n  if (typeof item === 'string') {\n    return hasFullnamePrefix(item) ? item : prefix + item;\n  }\n\n  return item.name;\n}\n/**\n* @summary Determines whether a string is a \"fullname\". A \"fullname\" starts with \"t1_\", \"t2_\", ... \"t8_\", or \"LiveUpdateEvent_\".\n* @param {String} item\n* @returns {boolean}\n* @api private\n*/\n\n\nfunction hasFullnamePrefix(item) {\n  return /^(t\\d|LiveUpdateEvent)_/.test(item);\n}\n/**\n* @summary Adds snake_case getters and setters to an object\n* @desc All of snoowrap's functions and object options used to be defined in snake_case. For backwards compatibility,\nsnake_case property names (e.g. for the snoowrap constructor) are still supported. This function adds snake_case getters and\nsetters to a camelCase object, such that accessing and setting the snake_case property also correctly set the camelCase version\nof the property.\n* @param {object} obj The object that should have getters/setters attached\n* @returns The updated version of `obj`\n* @api private\n*/\n\n\nfunction addSnakeCaseShadowProps(obj) {\n  Object.keys(obj).filter(function (key) {\n    return !key.startsWith('_') && key !== (0, _lodash.snakeCase)(key);\n  }).forEach(function (key) {\n    Object.defineProperty(obj, (0, _lodash.snakeCase)(key), {\n      get: function () {\n        return obj[key];\n      },\n      set: function (value) {\n        return obj[key] = value;\n      }\n    });\n  });\n  return obj;\n}\n\nvar isBrowser = typeof self === 'object';\nexports.isBrowser = isBrowser;\n\nfunction defineInspectFunc(obj, inspectFunc) {\n  if (isBrowser) {\n    return;\n  } // Use the util.inspect.custom symbol if available (Node 6.6.0+)\n\n\n  var inspectKey = _util.default.inspect && typeof _util.default.inspect.custom === 'symbol' ? _util.default.inspect.custom : 'inspect';\n  Object.defineProperty(obj, inspectKey, {\n    writable: true,\n    enumerable: false,\n    value: inspectFunc\n  });\n}\n\nfunction requiredArg(argName) {\n  throw new TypeError(\"Missing required argument \".concat(argName));\n}","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/8. savedit/client/node_modules/snoowrap/dist/helpers.js"],"names":["Object","defineProperty","exports","value","getEmptyRepliesListing","addEmptyRepliesListing","handleJsonErrors","findMessageInTree","formatPermissions","renameKey","buildRepliesTree","addFullnamePrefix","hasFullnamePrefix","addSnakeCaseShadowProps","defineInspectFunc","requiredArg","isBrowser","formatLivethreadPermissions","formatModPermissions","_util","_interopRequireDefault","require","_lodash","_constants","_More","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","item","constructor","_name","_r","_newObject","_uri","concat","link_id","parent_id","slice","_query","comment","name","_transform","property","_link_id","_isCommentList","id","replies","returnValue","response","isEmpty","json","errors","Error","desiredName","rootNode","find","map","partial","allPermissionNames","permsArray","type","includes","join","MODERATOR_PERMISSIONS","LIVETHREAD_PERMISSIONS","oldKey","newKey","omit","childList","childMap","keyBy","child","_more","emptyChildren","remove","_setMore","prefix","test","startsWith","snakeCase","get","set","self","inspectFunc","inspectKey","inspect","custom","argName","TypeError"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEmptyRepliesListing = getEmptyRepliesListing;\nexports.addEmptyRepliesListing = addEmptyRepliesListing;\nexports.handleJsonErrors = handleJsonErrors;\nexports.findMessageInTree = findMessageInTree;\nexports.formatPermissions = formatPermissions;\nexports.renameKey = renameKey;\nexports.buildRepliesTree = buildRepliesTree;\nexports.addFullnamePrefix = addFullnamePrefix;\nexports.hasFullnamePrefix = hasFullnamePrefix;\nexports.addSnakeCaseShadowProps = addSnakeCaseShadowProps;\nexports.defineInspectFunc = defineInspectFunc;\nexports.requiredArg = requiredArg;\nexports.isBrowser = exports.formatLivethreadPermissions = exports.formatModPermissions = void 0;\n\nvar _util = _interopRequireDefault(require(\"util\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"./constants.js\");\n\nvar _More = require(\"./objects/More.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n* @summary Returns an unfetched empty replies Listing for an item.\n* @param {Comment|Submission|PrivateMessage} item An item without a replies Listing\n* @returns {Listing} The empty replies Listing\n* @api private\n*/\nfunction getEmptyRepliesListing(item) {\n  if (item.constructor._name === 'Comment') {\n    return item._r._newObject('Listing', {\n      _uri: \"comments/\".concat((item.link_id || item.parent_id).slice(3)),\n      _query: {\n        comment: item.name.slice(3)\n      },\n      _transform: (0, _lodash.property)('comments[0].replies'),\n      _link_id: item.link_id,\n      _isCommentList: true\n    });\n  }\n\n  if (item.constructor._name === 'Submission') {\n    return item._r._newObject('Listing', {\n      _uri: \"comments/\".concat(item.id),\n      _transform: (0, _lodash.property)('comments'),\n      _isCommentList: true\n    });\n  }\n\n  return item._r._newObject('Listing');\n}\n/**\n* @summary Adds an empty replies Listing to an item.\n* @param {Comment|PrivateMessage} item\n* @returns {Comment|PrivateMessage} The item with the new replies Listing\n* @api private\n*/\n\n\nfunction addEmptyRepliesListing(item) {\n  item.replies = getEmptyRepliesListing(item);\n  return item;\n}\n\nfunction handleJsonErrors(returnValue) {\n  return function (response) {\n    if ((0, _lodash.isEmpty)(response) || (0, _lodash.isEmpty)(response.json.errors)) {\n      return returnValue;\n    }\n\n    throw new Error(response.json.errors[0]);\n  };\n}\n/**\n* @summary Performs a depth-first search of a tree of private messages, in order to find a message with a given name.\n* @param {String} desiredName The fullname of the desired message\n* @param {PrivateMessage} rootNode The root message of the tree\n* @returns {PrivateMessage} The PrivateMessage with the given fullname, or undefined if it was not found in the tree.\n* @api private\n*/\n\n\nfunction findMessageInTree(desiredName, rootNode) {\n  return rootNode.name === desiredName ? rootNode : (0, _lodash.find)(rootNode.replies.map((0, _lodash.partial)(findMessageInTree, desiredName)));\n}\n/**\n* @summary Formats permissions into a '+'/'-' string\n* @param {String[]} allPermissionNames All possible permissions in this category\n* @param {String[]} permsArray The permissions that should be enabled\n* @returns {String} The permissions formatted into a '+'/'-' string\n* @api private\n*/\n\n\nfunction formatPermissions(allPermissionNames, permsArray) {\n  return permsArray ? allPermissionNames.map(function (type) {\n    return ((0, _lodash.includes)(permsArray, type) ? '+' : '-') + type;\n  }).join(',') : '+all';\n}\n\nvar formatModPermissions = (0, _lodash.partial)(formatPermissions, _constants.MODERATOR_PERMISSIONS);\nexports.formatModPermissions = formatModPermissions;\nvar formatLivethreadPermissions = (0, _lodash.partial)(formatPermissions, _constants.LIVETHREAD_PERMISSIONS);\n/**\n* @summary Renames a key on an object, omitting the old key\n* @param {Object} obj\n* @param oldKey {String}\n* @param newKey {String}\n* @returns {Object} A version of the object with the key renamed\n* @api private\n*/\n\nexports.formatLivethreadPermissions = formatLivethreadPermissions;\n\nfunction renameKey(obj, oldKey, newKey) {\n  return obj && (0, _lodash.omit)(_objectSpread({}, obj, {\n    [newKey]: obj[oldKey]\n  }), oldKey);\n}\n/**\n* @summary Builds a replies tree from a list of child comments or messages\n* @desc When reddit returns private messages (or comments from the /api/morechildren endpoint), it arranges their in a very\nnonintuitive way (see https://github.com/not-an-aardvark/snoowrap/issues/15 for details). This function rearranges the message\ntree so that replies are threaded properly.\n* @param {Array} childList The list of child comments\n* @returns {Array} The resulting list of child comments, arranged into a tree.\n* @api private\n*/\n\n\nfunction buildRepliesTree(childList) {\n  var childMap = (0, _lodash.keyBy)(childList, 'name');\n  childList.forEach(addEmptyRepliesListing);\n  childList.filter(function (child) {\n    return child.constructor._name === 'Comment';\n  }).forEach(function (child) {\n    return child.replies._more = _More.emptyChildren;\n  });\n  (0, _lodash.remove)(childList, function (child) {\n    return childMap[child.parent_id];\n  }).forEach(function (child) {\n    if (child.constructor._name === 'More') {\n      childMap[child.parent_id].replies._setMore(child);\n\n      child.link_id = childMap[child.parent_id].link_id;\n    } else {\n      childMap[child.parent_id].replies.push(child);\n    }\n  });\n  return childList;\n}\n/**\n* @summary Adds a fullname prefix to an item, if it doesn't have a prefix already. If the item is a RedditContent object, gets\nthe item's fullname.\n* @param {String|RedditContent} item\n* @returns {String}\n* @api private\n*/\n\n\nfunction addFullnamePrefix(item, prefix) {\n  if (typeof item === 'string') {\n    return hasFullnamePrefix(item) ? item : prefix + item;\n  }\n\n  return item.name;\n}\n/**\n* @summary Determines whether a string is a \"fullname\". A \"fullname\" starts with \"t1_\", \"t2_\", ... \"t8_\", or \"LiveUpdateEvent_\".\n* @param {String} item\n* @returns {boolean}\n* @api private\n*/\n\n\nfunction hasFullnamePrefix(item) {\n  return /^(t\\d|LiveUpdateEvent)_/.test(item);\n}\n/**\n* @summary Adds snake_case getters and setters to an object\n* @desc All of snoowrap's functions and object options used to be defined in snake_case. For backwards compatibility,\nsnake_case property names (e.g. for the snoowrap constructor) are still supported. This function adds snake_case getters and\nsetters to a camelCase object, such that accessing and setting the snake_case property also correctly set the camelCase version\nof the property.\n* @param {object} obj The object that should have getters/setters attached\n* @returns The updated version of `obj`\n* @api private\n*/\n\n\nfunction addSnakeCaseShadowProps(obj) {\n  Object.keys(obj).filter(function (key) {\n    return !key.startsWith('_') && key !== (0, _lodash.snakeCase)(key);\n  }).forEach(function (key) {\n    Object.defineProperty(obj, (0, _lodash.snakeCase)(key), {\n      get: function () {\n        return obj[key];\n      },\n      set: function (value) {\n        return obj[key] = value;\n      }\n    });\n  });\n  return obj;\n}\n\nvar isBrowser = typeof self === 'object';\nexports.isBrowser = isBrowser;\n\nfunction defineInspectFunc(obj, inspectFunc) {\n  if (isBrowser) {\n    return;\n  } // Use the util.inspect.custom symbol if available (Node 6.6.0+)\n\n\n  var inspectKey = _util.default.inspect && typeof _util.default.inspect.custom === 'symbol' ? _util.default.inspect.custom : 'inspect';\n  Object.defineProperty(obj, inspectKey, {\n    writable: true,\n    enumerable: false,\n    value: inspectFunc\n  });\n}\n\nfunction requiredArg(argName) {\n  throw new TypeError(\"Missing required argument \".concat(argName));\n}"]},"metadata":{},"sourceType":"script"}